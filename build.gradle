// QuerytDsl용
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

// QuerytDsl용
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'com.NC13'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
// QuerytDsl용
def querydslDir = 'src/main/generated'
querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets{
	main{
		java{
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
clean.doLast {
	file(querydslDir).deleteDir()
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
//	implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '5.1.0'
	implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
	implementation "com.querydsl:querydsl-core:5.1.0"
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.3.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.1'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// QueryDsl 쿼리 타입 생성 (QClass 생성 시 @Entity 탐색)
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	// java.lang.NoClassDefFoundError:javax/persistence/Entity 에러 방지
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
